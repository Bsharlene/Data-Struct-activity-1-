import java.util.Scanner;

public class ArrayMenuActivity1 {
    static int[] arr;
    static int size;
    static int count = 0; // current number of items

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // ask the user for array length
        System.out.print("Enter how many numbers the array can hold: ");
        size = sc.nextInt();
        arr = new int[size];

        int choice;
        do {
            // menu
            System.out.println("\n--- MENU ---");
            System.out.println("1. Add a number");
            System.out.println("2. Delete a number");
            System.out.println("3. Search a number");
            System.out.println("4. Show all numbers");
            System.out.println("5. Sort numbers");
            System.out.println("6. Exit");
            System.out.print("Choose option: ");
            choice = sc.nextInt();

            // just call the methods
            switch (choice) {
                case 1:
                    addItem(sc);
                    break;
                case 2:
                    deleteItem(sc);
                    break;
                case 3:
                    searchItem(sc);
                    break;
                case 4:
                    displayItems();
                    break;
                case 5:
                    sortItems();
                    break;
                case 6:
                    System.out.println("Goodbye! Thank you :>");
                    break;
                default:
                    System.out.println("Invalid choice, try again.");
            }

        } while (choice != 6);

        sc.close();
    }

    // add number with auto-resize if full
    static void addItem(Scanner sc) {
        if (count == size) {
            // double the size silently
            System.out.println("Array is full!");
            System.out.println("Creating new memory box (double size).");

            int newSize = size * 2;
            int[] newArr = new int[newSize];
            for (int i = 0; i < size; i++) {
                newArr[i] = arr[i];
            }
            arr = newArr;
            size = newSize;
        }

        System.out.print("Enter number to add: ");
        int num = sc.nextInt();
        arr[count] = num;
        count++;
        System.out.println(num + " was added.");
    }

    // delete number
    static void deleteItem(Scanner sc) {
        System.out.print("Enter number to delete: ");
        int num = sc.nextInt();
        int index = -1;

        for (int i = 0; i < count; i++) {
            if (arr[i] == num) {
                index = i;
                break;
            }
        }

        if (index == -1) {
            System.out.println(num + " not found.");
        } else {
            // shift left
            for (int i = index; i < count - 1; i++) {
                arr[i] = arr[i + 1];
            }
            count--;
            System.out.println(num + " was deleted.");
        }
    }

    // search number
    static void searchItem(Scanner sc) {
        System.out.print("Enter number to search: ");
        int num = sc.nextInt();
        boolean found = false;

        for (int i = 0; i < count; i++) {
            if (arr[i] == num) {
                System.out.println(num + " is at position " + (i + 1));
                found = true;
            }
        }

        if (!found) {
            System.out.println(num + " not found in array.");
        }
    }

    // show numbers + usage
    static void displayItems() {
        if (count == 0) {
            System.out.println("Array is empty.");
        } else {
            System.out.print("Array items (" + count + "/" + size + " used): ");
            for (int i = 0; i < count; i++) {
                System.out.print(arr[i] + " ");
            }
            System.out.println();
        }
    }

    // sort numbers in ascending order
    static void sortItems() {
        if (count == 0) {
            System.out.println("Array is empty, nothing to sort.");
            return;
        }

        for (int i = 0; i < count - 1; i++) {
            for (int j = 0; j < count - i - 1; j++) {
                if (arr[j] > arr[j + 1]) {
                    // swap
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }

        System.out.println("Array has been sorted in ascending order.");
        displayItems();
    }
}






